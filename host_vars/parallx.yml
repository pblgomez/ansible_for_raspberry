---
the_host_name: parallx
the_group: "{{ RaspberryPiOS }}"

global_env_vars:
  - PUID=1000
  - PGID=1000
  - TZ={{ vault_TZ }}
appdata_path: /home/{{ ansible_user }}/config
container_config_path: /config

DOMAIN: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['host'] }}{% endif %}{% endfor %}"
DUCKDNS_SUBDOMAINS: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['DUCKDNS_SUBDOMAINS'] }}{% endif %}{% endfor %}"
DUCKDNS_TOKEN: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['DUCKDNS_TOKEN'] }}{% endif %}{% endfor %}"
HASSDB_ROOT_PASSWD: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['HASSDB_ROOT_PASSWD'] }}{% endif %}{% endfor %}"
HASSDB_USER: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['HASSDB_USER'] }}{% endif %}{% endfor %}"
HASSDB_PASSWORD: "{% for item in the_group %}{% if item.name == the_host_name %}{{ item.vars[0]['HASSDB_PASSWORD'] }}{% endif %}{% endfor %}"

containers:
  - service_name: caddy
    active: true
    include_global_env_vars: true
    container_name: caddy
    image: caddy:2.2.1-alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro                            # For docker
      - "{{ appdata_path }}/caddy/Caddyfile:/etc/caddy/Caddyfile"           # Caddyfile
      - "{{ appdata_path }}/caddy/data:{{ container_config_path }}/caddy"   # certificates
      - "{{ appdata_path }}/caddy/config:{{ container_config_path }}"       # json
    environment:
      - DOMAIN={{ DOMAIN }}
    depends_on:
      - duckdns
    restart: unless-stopped

  - service_name: duckdns
    active: true
    include_global_env_vars: true
    container_name: duckdns
    image: ghcr.io/linuxserver/duckdns:version-d878afd7
    environment:
      - SUBDOMAINS={{ DUCKDNS_SUBDOMAINS }}
      - TOKEN={{ DUCKDNS_TOKEN }}
    restart: unless-stopped

  - service_name: homeassistant
    active: true
    include_global_env_vars: true
    container_name: homeassistant
    image: homeassistant/raspberrypi3-homeassistant:2021.1.5
    network_mode: host
    volumes:
      - "{{ appdata_path }}/homeassistant:/config"
      - /etc/localtime:/etc/localtime:ro
      - "{{ appdata_path }}/homeassistant/docker/run:/etc/services.d/home-assistant/run"
    environment:
      - PACKAGES=iputils
    depends_on:
      - homeassistant_db
    healthcheck:
      test_port: 8123
      interval: 30s
      timeout: 10s
      retries: 6
    restart: unless-stopped

  - service_name: homeassistant_db
    active: true
    include_global_env_vars: true
    image: ghcr.io/linuxserver/mariadb:110.4.17mariabionic-ls1
    environment:
      - MYSQL_ROOT_PASSWORD={{ HASSDB_ROOT_PASSWD }}
      - MYSQL_DATABASE=homeassistant
      - MYSQL_USER={{ HASSDB_USER }}
      - MYSQL_PASSWORD={{ HASSDB_PASSWORD }}
    volumes:
      - "{{ appdata_path }}/homeassistant_db:/config"
    ports:
      - 3306:3306
    restart: unless-stopped

  - service_name: node-red
    active: true
    image: nodered/node-red:1.2.7-minimal
    ports:
      - 1880:1880
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ appdata_path }}/node-red:/data"
      - "{{ volume_node_red_modules }}:/usr/src/node-red/node_modules"
      - /etc/timezone:/etc/timezone:ro
    depends_on:
      - mosquitto
    healthcheck:
      test_port: "1880"
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  - service_name: mosquitto
    active: true
    image: eclipse-mosquitto:1.6
    restart: unless-stopped
    user: "{{ docker_compose_generator_uid }}:{{ docker_compose_generator_gid }}"
    ports:
      - 1883:1883
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - "{{ appdata_path }}/mosquitto:/mosquitto/config:ro"
      - "{{ appdata_path }}/mosquitto:/mosquitto/data"

  - service_name: rancher
    active: false
    restart: unless-stopped
    image: rancher/rancher
    container_name: rancher
    privileged: true
    depends_on:
      - caddy
    volumes:
      - "{{ appdata_path }}/rancher:/var/lib/rancher"
    ports:
      - 8080:80
    command:
      - --no-cacerts

# volumes
volume_node_red_modules: node-red-modules

volumes:
  - volume_name: "{{ volume_node_red_modules }}"
    active: true
